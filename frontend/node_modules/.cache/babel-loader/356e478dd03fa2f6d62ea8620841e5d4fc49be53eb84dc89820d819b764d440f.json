{"ast":null,"code":"var _jsxFileName = \"/Users/yen/Desktop/Java/projects/Movies/frontend/src/components/movies/movies-keywords/MoviesByKeywords.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport MovieDetail from \"../moviedetail/MovieDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MoviesByKeywords(props) {\n  _s();\n  // const [keywordsMovies,setKeywordsMovies] = useState([]);\n  // const [isDetailed,setIsDetailed] = useState(false);\n  const [movie, setMovie] = useState({});\n  useEffect(() => {\n    axios.get(`http://localhost:8888/movies/name/${props.searchValue}`).then(response => {\n      // setKeywordsMovies(response.data);\n      setMovie(response.data);\n    }, error => {\n      console.log(error.message);\n    });\n  }, []);\n\n  // const showDetail = (movie)=>{\n  //   setIsDetailed(true);\n  //   setMovie(movie);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(MovieDetail, {\n    movie: movie\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this)\n  // isDetailed ? \n  // <MovieDetail movie={movie} /> : \n  // <div className=\"movie-genres\">\n  //   {\n  //     keywordsMovies.length===0 ? \n  //     <div className=\"none-movie\">No Movies Found! Please try again.</div> :\n  //     <div>\n  //       <div className=\"list-genres\">{props.searchValue.charAt(0).toUpperCase() + props.searchValue.substring(1)} Movies</div>\n  //       <div className=\"movie-top clearfix\">\n  //         <span>Title</span>\n  //         <span>Rating</span>\n  //       </div>\n  //       {\n  //         keywordsMovies.map((movie,index) => {\n  //           return <div className=\"movie-item\" key={index} onClick={()=>showDetail(movie)}>\n  //             <img className=\"movie-info img\" src={require(`../../../images/${movie.imgUrl}`)} alt=\"movie-pic\" />\n  //             <div className=\"movie-info title\">{index+1}. {movie.name}</div>\n  //             <div className=\"movie-info year\">({movie.releasedYear})</div>\n  //             <div className=\"movie-info rate\">⭐️&nbsp;  \n  //               {\n  //                 movie.rate.toString().length<2 ?\n  //                 movie.rate+\".0\" :\n  //                 movie.rate\n  //               }\n  //             </div>\n  //           </div>\n  //         })    \n  //       }\n  //     </div>\n  //   }\n  // </div>\n  ;\n}\n_s(MoviesByKeywords, \"vjn7l2Xfyv8U759KvgOto7g+Dfw=\");\n_c = MoviesByKeywords;\nvar _c;\n$RefreshReg$(_c, \"MoviesByKeywords\");","map":{"version":3,"names":["useState","useEffect","axios","MovieDetail","jsxDEV","_jsxDEV","MoviesByKeywords","props","_s","movie","setMovie","get","searchValue","then","response","data","error","console","log","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yen/Desktop/Java/projects/Movies/frontend/src/components/movies/movies-keywords/MoviesByKeywords.js"],"sourcesContent":["import { useState,useEffect } from \"react\";\nimport axios from 'axios';\nimport MovieDetail from \"../moviedetail/MovieDetail\";\n\nexport default function MoviesByKeywords(props){\n  // const [keywordsMovies,setKeywordsMovies] = useState([]);\n  // const [isDetailed,setIsDetailed] = useState(false);\n  const [movie, setMovie] = useState({});\n\n  useEffect(() => {\n    axios.get(`http://localhost:8888/movies/name/${props.searchValue}`).then(\n      response => {\n        // setKeywordsMovies(response.data);\n        setMovie(response.data);\n      },\n      error => {\n        console.log(error.message);\n      }\n    )\n  },[])\n\n  // const showDetail = (movie)=>{\n  //   setIsDetailed(true);\n  //   setMovie(movie);\n  // }\n\n  return (\n    <MovieDetail movie={movie} />\n    // isDetailed ? \n    // <MovieDetail movie={movie} /> : \n    // <div className=\"movie-genres\">\n    //   {\n    //     keywordsMovies.length===0 ? \n    //     <div className=\"none-movie\">No Movies Found! Please try again.</div> :\n    //     <div>\n    //       <div className=\"list-genres\">{props.searchValue.charAt(0).toUpperCase() + props.searchValue.substring(1)} Movies</div>\n    //       <div className=\"movie-top clearfix\">\n    //         <span>Title</span>\n    //         <span>Rating</span>\n    //       </div>\n    //       {\n    //         keywordsMovies.map((movie,index) => {\n    //           return <div className=\"movie-item\" key={index} onClick={()=>showDetail(movie)}>\n    //             <img className=\"movie-info img\" src={require(`../../../images/${movie.imgUrl}`)} alt=\"movie-pic\" />\n    //             <div className=\"movie-info title\">{index+1}. {movie.name}</div>\n    //             <div className=\"movie-info year\">({movie.releasedYear})</div>\n    //             <div className=\"movie-info rate\">⭐️&nbsp;  \n    //               {\n    //                 movie.rate.toString().length<2 ?\n    //                 movie.rate+\".0\" :\n    //                 movie.rate\n    //               }\n    //             </div>\n    //           </div>\n    //         })    \n    //       }\n    //     </div>\n    //   }\n    // </div>\n  )\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,eAAe,SAASC,gBAAgBA,CAACC,KAAK,EAAC;EAAAC,EAAA;EAC7C;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACS,GAAG,CAAE,qCAAoCJ,KAAK,CAACK,WAAY,EAAC,CAAC,CAACC,IAAI,CACtEC,QAAQ,IAAI;MACV;MACAJ,QAAQ,CAACI,QAAQ,CAACC,IAAI,CAAC;IACzB,CAAC,EACDC,KAAK,IAAI;MACPC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;IAC5B,CAAC,CACF;EACH,CAAC,EAAC,EAAE,CAAC;;EAEL;EACA;EACA;EACA;;EAEA,oBACEd,OAAA,CAACF,WAAW;IAACM,KAAK,EAAEA;EAAM;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;EAC1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ;AAACf,EAAA,CAxDuBF,gBAAgB;AAAAkB,EAAA,GAAhBlB,gBAAgB;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}